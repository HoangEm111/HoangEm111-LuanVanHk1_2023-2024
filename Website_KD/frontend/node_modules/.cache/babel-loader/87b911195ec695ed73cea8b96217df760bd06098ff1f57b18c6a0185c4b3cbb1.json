{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst bcrypt = require('bcrypt');\nconst db = require('./config/db'); // Đường dẫn đến file cấu hình kết nối CSDL\n\n// Hàm tiện ích để thực hiện truy vấn\nconst query = (sql, params) => {\n  return new Promise((resolve, reject) => {\n    db.query(sql, params, (err, results) => {\n      if (err) {\n        return reject(err);\n      }\n      resolve(results);\n    });\n  });\n};\nrouter.post('/register', async (req, res) => {\n  const {\n    username,\n    email,\n    password\n  } = req.body;\n  try {\n    // Kiểm tra xem người dùng đã tồn tại\n    const results = await query('SELECT * FROM users WHERE email = ?', [email]);\n    if (results.length > 0) {\n      return res.status(400).json({\n        message: 'Người dùng đã tồn tại'\n      });\n    }\n\n    // Băm mật khẩu\n    const salt = await bcrypt.genSalt(10);\n    const hashedPassword = await bcrypt.hash(password, salt);\n\n    // Tạo người dùng mới\n    await query('INSERT INTO users (username, email, password) VALUES (?, ?, ?)', [username, email, hashedPassword]);\n    res.status(201).json({\n      message: 'Đăng ký thành công'\n    });\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({\n      message: 'Đã xảy ra lỗi'\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","bcrypt","db","query","sql","params","Promise","resolve","reject","err","results","post","req","res","username","email","password","body","length","status","json","message","salt","genSalt","hashedPassword","hash","error","console","module","exports"],"sources":["D:/Luận Văn HK1_2024/Website_KD/frontend/src/components/register.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst bcrypt = require('bcrypt');\r\nconst db = require('./config/db'); // Đường dẫn đến file cấu hình kết nối CSDL\r\n\r\n// Hàm tiện ích để thực hiện truy vấn\r\nconst query = (sql, params) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.query(sql, params, (err, results) => {\r\n      if (err) {\r\n        return reject(err);\r\n      }\r\n      resolve(results);\r\n    });\r\n  });\r\n};\r\n\r\nrouter.post('/register', async (req, res) => {\r\n  const { username, email, password } = req.body;\r\n\r\n  try {\r\n    // Kiểm tra xem người dùng đã tồn tại\r\n    const results = await query('SELECT * FROM users WHERE email = ?', [email]);\r\n\r\n    if (results.length > 0) {\r\n      return res.status(400).json({ message: 'Người dùng đã tồn tại' });\r\n    }\r\n\r\n    // Băm mật khẩu\r\n    const salt = await bcrypt.genSalt(10);\r\n    const hashedPassword = await bcrypt.hash(password, salt);\r\n\r\n    // Tạo người dùng mới\r\n    await query('INSERT INTO users (username, email, password) VALUES (?, ?, ?)', \r\n      [username, email, hashedPassword]);\r\n\r\n    res.status(201).json({ message: 'Đăng ký thành công' });\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ message: 'Đã xảy ra lỗi' });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,MAAM,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMI,EAAE,GAAGJ,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;;AAEnC;AACA,MAAMK,KAAK,GAAGA,CAACC,GAAG,EAAEC,MAAM,KAAK;EAC7B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCN,EAAE,CAACC,KAAK,CAACC,GAAG,EAAEC,MAAM,EAAE,CAACI,GAAG,EAAEC,OAAO,KAAK;MACtC,IAAID,GAAG,EAAE;QACP,OAAOD,MAAM,CAACC,GAAG,CAAC;MACpB;MACAF,OAAO,CAACG,OAAO,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAEDX,MAAM,CAACY,IAAI,CAAC,WAAW,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC3C,MAAM;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGJ,GAAG,CAACK,IAAI;EAE9C,IAAI;IACF;IACA,MAAMP,OAAO,GAAG,MAAMP,KAAK,CAAC,qCAAqC,EAAE,CAACY,KAAK,CAAC,CAAC;IAE3E,IAAIL,OAAO,CAACQ,MAAM,GAAG,CAAC,EAAE;MACtB,OAAOL,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAwB,CAAC,CAAC;IACnE;;IAEA;IACA,MAAMC,IAAI,GAAG,MAAMrB,MAAM,CAACsB,OAAO,CAAC,EAAE,CAAC;IACrC,MAAMC,cAAc,GAAG,MAAMvB,MAAM,CAACwB,IAAI,CAACT,QAAQ,EAAEM,IAAI,CAAC;;IAExD;IACA,MAAMnB,KAAK,CAAC,gEAAgE,EAC1E,CAACW,QAAQ,EAAEC,KAAK,EAAES,cAAc,CAAC,CAAC;IAEpCX,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAqB,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpBb,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAgB,CAAC,CAAC;EACpD;AACF,CAAC,CAAC;AAEFO,MAAM,CAACC,OAAO,GAAG9B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}